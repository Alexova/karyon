/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

configurations.all {
    resolutionStrategy {
        force 'javax.servlet:javax.servlet-api:3.0.1'
    }
}

tasks.withType(Javadoc).each {
    it.classpath = sourceSets.main.compileClasspath
}

dependencies {
    dependencies {
        compile project(':karyon-extensions:karyon-servlet')
        compile 'com.google.inject.extensions:guice-servlet:3.0'
        compile 'org.jboss.arquillian.core:arquillian-core-spi:1.1.1.Final'
        compile 'org.jboss.arquillian.container:arquillian-container-spi:1.1.1.Final'
        compile 'org.jboss.arquillian.container:arquillian-container-test-spi:1.1.1.Final'
        compile 'org.jboss.arquillian.container:arquillian-container-test-impl-base:1.1.1.Final'
        compile 'org.jboss.arquillian.test:arquillian-test-spi:1.1.1.Final'
        compile 'org.jboss.shrinkwrap:shrinkwrap-impl-base:1.1.2'
        testCompile 'org.mockito:mockito-all:1.9.0'
        testCompile 'org.jboss.arquillian.core:arquillian-core-impl-base:1.1.1.Final'
        testCompile 'org.jboss.arquillian.core:arquillian-core-impl-base:1.1.1.Final:tests'
        testCompile 'org.jboss.arquillian.test:arquillian-test-impl-base:1.1.1.Final'
        testCompile 'org.jboss.arquillian.test:arquillian-test-impl-base:1.1.1.Final:tests'
    }
}

eclipse {
    classpath {
        // include 'provided' dependencies on the classpath
        plusConfigurations += configurations.provided

        downloadSources = true
        downloadJavadoc = true
    }
}

idea {
    module {
        // include 'provided' dependencies on the classpath
        scopes.PROVIDED.plus += configurations.provided
        scopes.PROVIDED.plus += configurations.provided
    }
}

jar {
    manifest {
        name = 'karyon-extensions-testsuite'
        instruction 'Bundle-Vendor', 'Netflix'
        instruction 'Bundle-DocURL', 'https://github.com/Netflix/karyon'
        instruction 'Import-Package', '!org.junit,!junit.framework,!org.mockito.*,*'
    }
}
